const pako = require('pako');

const base64Data = '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';
// Function to decode Base64 and decompress
function decodeAndDecompress(base64Data) {
    // Convert Base64 string to binary data
    let binaryString = atob(base64Data);

    // Convert binary string to Uint8Array
    let len = binaryString.length;
    let bytes = new Uint8Array(len);
    for (let i = 0; i < len; i++) {
        bytes[i] = binaryString.charCodeAt(i);
    }

    // Decompress the data using pako
    let decompressedData = pako.inflate(bytes);

    // Convert decompressed data to a string (assuming it's text data)
    let decompressedString = new TextDecoder().decode(decompressedData);
    console.log(decompressedString);
    return decompressedString;
}

const decodestring = decodeAndDecompress(base64Data);